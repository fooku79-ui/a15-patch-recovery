+ echo '‚úÖ Valid Android recovery image confirmed.'
‚úÖ Valid Android recovery image confirmed.
+ mv -f recovery.raw.img recovery.img
1s
Run actions/checkout@v4
Syncing repository: osm0sis/Android-Image-Kitchen
Getting Git version info
Temporarily overriding HOME='/home/runner/work/_temp/1ca0e9d3-4369-40cb-951a-99efaa63faad' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
/usr/bin/git config --global --add safe.directory /home/runner/work/a15-patch-recovery/a15-patch-recovery/work/AIK
Initializing the repository
Disabling automatic garbage collection
Setting up auth
Fetching the repository
Determining the checkout info
/usr/bin/git sparse-checkout disable
/usr/bin/git config --local --unset-all extensions.worktreeConfig
Checking out the ref
/usr/bin/git log -1 --format=%H
f1ec4343ccf7016fe1c85bb4d3aa9a65bfae0871
0s
Run set -euxo pipefail
+ cd work/AIK
+ echo 'üîß Building AIK binaries...'
+ '[' -f Makefile ']'
üîß Building AIK binaries...
+ '[' -d src ']'
+ echo 'üìÑ Building unpackbootimg manually...'
+ gcc -o unpackbootimg unpackbootimg.c
üìÑ Building unpackbootimg manually...
cc1: fatal error: unpackbootimg.c: No such file or directory
compilation terminated.
+ echo '‚ùå Failed to compile unpackbootimg'
‚ùå Failed to compile unpackbootimg
+ exit 1
Error: Process completed with exit code 1.
0s
0s
0s
0s
0s
0s
0s
Post job cleanup.
/usr/bin/git version
git version 2.51.0
Temporarily overriding HOME='/home/runner/work/_temp/766845c2-d337-4d7a-b240-9226a9bf9fa7' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
/usr/bin/git config --global --add safe.directory /home/runner/work/a15-patch-recovery/a15-patch-recovery
/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
http.https://github.com/.extraheader
/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
